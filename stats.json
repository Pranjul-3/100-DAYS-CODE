{"leetcode":{"easy":2,"hard":1,"medium":18,"shas":{"0104-maximum-depth-of-binary-tree":{"0104-maximum-depth-of-binary-tree.java":"328eb3350b282856b893757d0af91bdcd6e272f2","README.md":"3e88d40eac7067a0b69cceb90c76020b6f152ae0","difficulty":"easy"},"README.md":{"":"e351b3bb28d814ca66598f05008353129b195ccc"},"0105-construct-binary-tree-from-preorder-and-inorder-traversal":{"0105-construct-binary-tree-from-preorder-and-inorder-traversal.java":"fb51be084d658cb958ab240c50e1d04cda138417","README.md":"75ac83be2e52aa76ea9bd5c9c20537a499cb9ec0","difficulty":"medium"},"stats.json":{"":"01cc27dc28943bdef23833256cef22b7e19980ac"},"0133-clone-graph":{"0133-clone-graph.java":"01d045e9067769500a5d13eee0e3d99a28d4d40b","README.md":"38fdb5ad5ec20bac2131a1b2104d89710ba5a693","difficulty":"medium"},"0148-sort-list":{"0148-sort-list.java":"0b04d9a749a7c4381133d4c10656a8ab0eb425fa","README.md":"ef041a5a81dfc860682c67097873906709ca259c","difficulty":"medium"},"0152-maximum-product-subarray":{"0152-maximum-product-subarray.java":"85858b889751809388f3be71801a5410db720ba1","README.md":"33d2bb0c73189878a36f7c5dee1d49a66824c878","difficulty":"medium"},"0155-min-stack":{"0155-min-stack.java":"f4a2f7e78218bf5f061086e89722413f874d271b","README.md":"3902f5dff724cfd4e66625fd89bd17f7b3028c1a","difficulty":"medium"},"0164-maximum-gap":{"0164-maximum-gap.java":"44e4358f7c65fbc2a58bd62b463e205cc76ed7c2","README.md":"0c65521c07ed7ae1968803d8b420689e50a6c0ae","difficulty":"medium"},"0165-compare-version-numbers":{"0165-compare-version-numbers.java":"d94cbd8bb5a7f831029e879a7cbefd23071b1107","README.md":"25173ea14f790b3ab4a9d3165ee9e6da927f958d","difficulty":"medium"},"0140-word-break-ii":{"0140-word-break-ii.java":"2c8a3a118f6c68389196bafc820f0cc98cac51ac","README.md":"badf56a0e76ee745296e9bee16c6f24ded1c33c2","difficulty":"hard"},"0177-nth-highest-salary":{"0177-nth-highest-salary.sql":"697599ee92899fc05ae2d9ce06d902b14820d9e5","README.md":"f65f5d54ab835e165a52eed0c7218b79b0622ac5","difficulty":"medium"},"0207-course-schedule":{"0207-course-schedule.java":"f80935b334f9db59e200b1d370df861cddb60cc2","README.md":"19e83fe154b58ffbe769eca01a49e5614f165171","difficulty":"medium"},"0154-find-minimum-in-rotated-sorted-array-ii":{"README.md":"08db0b18fec2ffad6543091ceac01d008a2b6290"},"0160-intersection-of-two-linked-lists":{"0160-intersection-of-two-linked-lists.java":"ffed549da9a87d4152d05328831451567381d6cf","README.md":"1d24721f94bea1d33c647134e89e3e9a0c292725","difficulty":"easy"},"0098-validate-binary-search-tree":{"0098-validate-binary-search-tree.java":"055ec32ac0a10e9f6cca6b0ba9f69656df2fe044","README.md":"957fcdbca58c72b7e3fa5e71a94279d6325e4e06","difficulty":"medium"},"0095-unique-binary-search-trees-ii":{"0095-unique-binary-search-trees-ii.java":"ece9eba1052a131c8ec5256aaf39ca841b1dc86b","README.md":"b07462e6647326dce9160c64e524bc5e28831a78","difficulty":"medium"},"1325-path-with-maximum-probability":{"1325-path-with-maximum-probability.java":"b37614754b2fd4035d4d6795f7228f57cdf8e193","README.md":"d3e34b9cd497d499a5befeee6d04c93a81d53e04","difficulty":"medium"},"0102-binary-tree-level-order-traversal":{"0102-binary-tree-level-order-traversal.java":"4a817e22482d36c37f7c7e85a78b5f2f94ac41b7","README.md":"01b65fdfcb1f1937ab9e22e5e3338d581c1423eb","difficulty":"medium"},"0103-binary-tree-zigzag-level-order-traversal":{"0103-binary-tree-zigzag-level-order-traversal.java":"7353ab390912ce684501cca68cab1030ce7b969d","README.md":"fcd20aa2bad60f78f450527d135d90bfbc83d83a","difficulty":"medium"},"0106-construct-binary-tree-from-inorder-and-postorder-traversal":{"0106-construct-binary-tree-from-inorder-and-postorder-traversal.java":"cb6d68c0862808be48f8cd71c9c2083bc4a996b4","README.md":"8169bc76429370954eb33bb078940c0a05066e29","difficulty":"medium"},"0114-flatten-binary-tree-to-linked-list":{"0114-flatten-binary-tree-to-linked-list.java":"6021c99c95d20a7cbacdf463ca7cd41ea7404731","README.md":"581431bf3d62fd3a541ca6eb01543cb6f06b71a8","difficulty":"medium"},"0107-binary-tree-level-order-traversal-ii":{"0107-binary-tree-level-order-traversal-ii.java":"fa1da3608624bbcd33b3b6323c28153605e9ddf6","README.md":"19e5c63e3d048778c7c65943bcec247adaad1d21","difficulty":"medium"},"0109-convert-sorted-list-to-binary-search-tree":{"README.md":"7814d1ee6e9c13dfa44e956a6971a3aef71e6c37"},"0117-populating-next-right-pointers-in-each-node-ii":{"0117-populating-next-right-pointers-in-each-node-ii.java":"c4c498b9a3045b943d32f2ac440df12b325ac4fa","README.md":"884e1ff07d0edfb9c52d02ccac4bc0edcc5b0610","difficulty":"medium"}},"solved":21}}